
// 中文翻译
const zh = {
  // 通用
  cancel: '取消',
  confirm: '确认',
  save: '保存',
  reset: '重置',
  loading: '加载中...',
  error: '错误',
  success: '成功',
  warning: '警告',
  info: '信息',

  // 应用标题
  appTitle: 'Node App Manager',
  appDescription: '企业级 Node.js 项目管理工具',

  // 导航
  nav: {
    settings: '设置',
    projects: '项目',
  },

  // 设置页面
  settings: {
    title: '设置',
    description: '管理应用程序首选项和配置',
    reset: '重置所有设置',
    app: {
      title: '应用设置',
      theme: '主题',
      themeDesc: '选择应用程序的外观主题',
      language: '语言',
      languageDesc: '设置应用程序界面语言',
      autoStart: '开机自启动',
      autoStartDesc: '系统启动时自动运行Node App Manager',
    },
    notifications: {
      title: '通知设置',
      projectStatus: '项目状态通知',
      projectStatusDesc: '当项目启动或停止时显示通知',
      errors: '错误通知',
      errorsDesc: '发生错误时显示通知',
    },
    about: {
      title: '关于',
      description: '现代化的Node.js项目管理工具',
      features1: '一键启动和停止Node.js项目',
      features2: '实时日志监控和项目状态管理',
      techStack: '技术栈',
    },
  },

  // 日志
  logs: {
    noActiveProjects: '暂无活动项目',
    noActiveProjectsDesc: '启动项目后可在此查看日志',
    startHint: '点击项目的"启动"按钮开始',
  },

  // 项目管理  
  projects: {
    import: '导入项目',
    createNew: '创建新项目',
    name: '项目名称',
    path: '项目路径',
    type: '项目类型',
    port: '端口',
    status: '项目状态',
    running: '运行中',
    stopped: '已停止',
    starting: '启动中',
    stopping: '停止中',
  },

  // 项目操作
  actions: {
    start: '启动',
    stop: '停止',
    restart: '重启',
    remove: '删除',
    openLogs: '查看日志',
    openInBrowser: '在浏览器中打开',
  },

  // 主题选项
  themes: {
    dark: '深色主题',
    light: '浅色主题',
  },

  // 语言选项
  languages: {
    zh: '中文',
    en: 'English',
  },

  // 通知消息
  messages: {
    settingsSaved: '设置已保存',
    settingsReset: '设置已重置为默认值',
    projectImported: '项目导入成功',
    projectCreated: '项目创建成功',
    projectStarted: '项目启动成功',
    projectStopped: '项目停止成功',
    projectRemoved: '项目已删除',
    importFailed: '导入失败',
    createFailed: '创建失败',
    startFailed: '启动失败',
    stopFailed: '停止失败',
    settingsLoadFailed: '设置加载失败',
    settingsSaveFailed: '设置保存失败',
  },

  // 项目创建
  create: {
    project: '创建项目',
    template: '项目模板',
    packageManager: '包管理器',
    frontendFramework: '前端框架',
    tools: '可选工具',
    eslint: 'ESLint - 代码质量检查',
    prettier: 'Prettier - 代码格式化',
    jest: 'Jest - 单元测试框架',
    envConfig: '.env 配置 - 环境变量配置',
    autoInstall: '自动安装依赖 - 创建后自动安装',
    gitInit: 'Git 初始化 - 初始化 Git 仓库',
  },

  // 通知消息
  settingsSaved: '设置已保存',
  settingsResetted: '设置已重置为默认值',
  projectImported: '项目导入成功',
  projectCreated: '项目创建成功',
  projectStarted: '项目启动成功',
  projectStopped: '项目停止成功',
  projectRemoved: '项目已删除',

  // 错误消息
  importFailed: '导入失败',
  createFailed: '创建失败',
  startFailed: '启动失败',
  stopFailed: '停止失败',
  settingsLoadFailed: '设置加载失败',
  settingsSaveFailed: '设置保存失败',

  // 项目创建
  createProject: '创建项目',
  projectTemplate: '项目模板',
  packageManager: '包管理器',
  frontendFramework: '前端框架',
  optionalTools: '可选工具',
  eslint: 'ESLint - 代码质量检查',
  prettier: 'Prettier - 代码格式化',
  jest: 'Jest - 单元测试框架',
  envConfig: '.env 配置 - 环境变量配置',
  autoInstall: '自动安装依赖 - 创建后自动安装',
  gitInit: 'Git 初始化 - 初始化 Git 仓库',
};

// 英文翻译
const en = {
  // Common
  cancel: 'Cancel',
  confirm: 'Confirm',
  save: 'Save',
  reset: 'Reset',
  loading: 'Loading...',
  error: 'Error',
  success: 'Success',
  warning: 'Warning',
  info: 'Info',

  // App Title
  appTitle: 'Node App Manager',
  appDescription: 'Enterprise Node.js Project Management Tool',

  // Navigation
  nav: {
    settings: 'Settings',
    projects: 'Projects',
  },

  // Settings Page
  settings: {
    title: 'Settings',
    description: 'Manage application preferences and configuration',
    reset: 'Reset All Settings',
    app: {
      title: 'App Settings',
      theme: 'Theme',
      themeDesc: 'Choose the appearance theme for the application',
      language: 'Language',
      languageDesc: 'Set the interface language of the application',
      autoStart: 'Auto Start on Boot',
      autoStartDesc: 'Automatically run Node App Manager when system starts',
    },
    notifications: {
      title: 'Notifications',
      projectStatus: 'Project Status Notifications',
      projectStatusDesc: 'Show notifications when projects start or stop',
      errors: 'Error Notifications',
      errorsDesc: 'Show notifications when errors occur',
    },
    about: {
      title: 'About',
      description: 'Modern Node.js project management tool',
      features1: 'One-click start and stop Node.js projects',
      features2: 'Real-time log monitoring and project status management',
      techStack: 'Tech Stack',
    },
  },

  // Logs
  logs: {
    noActiveProjects: 'No Active Projects',
    noActiveProjectsDesc: 'Start a project to view logs here',
    startHint: 'Click the "Start" button on a project to begin',
  },

  // Project Management
  projects: {
    import: 'Import Project',
    createNew: 'Create New',
    name: 'Project Name',
    path: 'Project Path',
    type: 'Project Type',
    port: 'Port',
    status: 'Status',
    running: 'Running',
    stopped: 'Stopped',
    starting: 'Starting',
    stopping: 'Stopping',
  },

  // Project Actions
  actions: {
    start: 'Start',
    stop: 'Stop',
    restart: 'Restart',
    remove: 'Remove',
    openLogs: 'View Logs',
    openInBrowser: 'Open in Browser',
  },

  // Theme Options
  themes: {
    dark: 'Dark Theme',
    light: 'Light Theme',
  },

  // Language Options
  languages: {
    zh: '中文',
    en: 'English',
  },

  // Notification Messages
  messages: {
    settingsSaved: 'Settings saved',
    settingsReset: 'Settings reset to defaults',
    projectImported: 'Project imported successfully',
    projectCreated: 'Project created successfully',
    projectStarted: 'Project started successfully',
    projectStopped: 'Project stopped successfully',
    projectRemoved: 'Project removed',
    importFailed: 'Import failed',
    createFailed: 'Create failed',
    startFailed: 'Start failed',
    stopFailed: 'Stop failed',
    settingsLoadFailed: 'Failed to load settings',
    settingsSaveFailed: 'Failed to save settings',
  },

  // Project Creation
  create: {
    project: 'Create Project',
    template: 'Project Template',
    packageManager: 'Package Manager',
    frontendFramework: 'Frontend Framework',
    tools: 'Optional Tools',
    eslint: 'ESLint - Code quality checking',
    prettier: 'Prettier - Code formatting',
    jest: 'Jest - Unit testing framework',
    envConfig: '.env Config - Environment variables configuration',
    autoInstall: 'Auto Install Dependencies - Install after creation',
    gitInit: 'Git Init - Initialize Git repository',
};

// 翻译映射
const translations = { zh, en };

// 当前语言状态
let currentLanguage: 'zh' | 'en' = 'zh';

// 获取翻译文本的函数
export function t(key: string): string {
  const keys = key.split('.');
  let value: any = translations[currentLanguage];
  
  for (const k of keys) {
    if (value && typeof value === 'object' && k in value) {
      value = value[k];
    } else {
      // 如果找不到翻译，返回原始 key
      console.warn(`Translation key not found: ${key}`);
      return key;
    }
  }
  
  return typeof value === 'string' ? value : key;
}

// 设置语言
export function setLanguage(lang: 'zh' | 'en') {
  currentLanguage = lang;
}

// 获取当前语言
export function getCurrentLanguage() {
  return currentLanguage;
}

// 获取所有可用语言
export function getAvailableLanguages() {
  return Object.keys(translations);
}

// 创建国际化实例
export function createI18n() {
  return {
    t,
    setLanguage,
    getCurrentLanguage,
    getAvailableLanguages,
  };
}
